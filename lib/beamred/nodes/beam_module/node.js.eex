const node = {
  category: "beam",
  color: "#ffffff",
  defaults: {
    name: { value: "" },
    info: { value: "" },
  },
  inputs: 1,
  outputs: 0,
  icon: "comment.svg",
  label: function () {
    return this.name || "beam-module";
  },
  labelStyle: function () {
    return this.name ? "node_label_italic" : "";
  },
  info: function () {
    return this.name ? "# " + this.name + "\n\n---\n\n" : "";
  },
  oneditprepare: function () {
    var that = this;
    this.editor = RED.editor.createEditor({
      id: "node-input-info-editor",
      mode: "ace/mode/elixir",
      value: $("#node-input-info").val(),
    });
    this.editor.focus();
  },
  oneditsave: function () {
    $("#node-input-info").val(this.editor.getValue());
    this.editor.destroy();
    delete this.editor;
  },
  oneditcancel: function () {
    this.editor.destroy();
    delete this.editor;
  },
  oneditresize: function (size) {
    var rows = $("#dialog-form>div:not(.node-text-editor-row)");
    var height = $("#dialog-form").height();
    for (var i = 0; i < rows.length; i++) {
      height -= $(rows[i]).outerHeight(true);
    }
    var editorRow = $("#dialog-form>div.node-text-editor-row");
    height -=
      parseInt(editorRow.css("marginTop")) +
      parseInt(editorRow.css("marginBottom"));
    $(".node-text-editor").css("height", height + "px");
    this.editor.resize();
  },
};
